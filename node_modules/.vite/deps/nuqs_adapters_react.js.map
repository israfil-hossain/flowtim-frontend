{
  "version": 3,
  "sources": ["../../.pnpm/nuqs@2.6.0_react-router-dom@7.9.3_react-dom@18.3.1_react@18.3.1__react@18.3.1__react-ro_2c608c5120377f1a6705390e68075f8e/node_modules/nuqs/src/adapters/lib/key-isolation.ts", "../../.pnpm/nuqs@2.6.0_react-router-dom@7.9.3_react-dom@18.3.1_react@18.3.1__react@18.3.1__react-ro_2c608c5120377f1a6705390e68075f8e/node_modules/nuqs/src/lib/queues/reset.ts", "../../.pnpm/nuqs@2.6.0_react-router-dom@7.9.3_react-dom@18.3.1_react@18.3.1__react@18.3.1__react-ro_2c608c5120377f1a6705390e68075f8e/node_modules/nuqs/src/adapters/lib/patch-history.ts", "../../.pnpm/nuqs@2.6.0_react-router-dom@7.9.3_react-dom@18.3.1_react@18.3.1__react@18.3.1__react-ro_2c608c5120377f1a6705390e68075f8e/node_modules/nuqs/src/adapters/react.ts"],
  "sourcesContent": ["import { debug } from '../../lib/debug'\n\nexport function applyChange(\n  newValue: URLSearchParams,\n  keys: string[],\n  copy: boolean\n): (oldValue: URLSearchParams) => URLSearchParams {\n  return (oldValue: URLSearchParams) => {\n    const hasChanged =\n      keys.length === 0\n        ? true\n        : keys.some(key => oldValue.get(key) !== newValue.get(key))\n    if (!hasChanged) {\n      debug(\n        '[nuqs `%s`] no change, returning previous',\n        keys.join(','),\n        oldValue\n      )\n      return oldValue\n    }\n    const filtered = filterSearchParams(newValue, keys, copy)\n    debug(\n      `[nuqs \\`%s\\`] subbed search params change\n  from %O\n  to   %O`,\n      keys.join(','),\n      oldValue,\n      filtered\n    )\n    return filtered\n  }\n}\n\nexport function filterSearchParams(\n  search: URLSearchParams,\n  keys: string[],\n  copy: boolean\n): URLSearchParams {\n  if (keys.length === 0) {\n    return search\n  }\n  const filtered = copy ? new URLSearchParams(search) : search\n  for (const key of search.keys()) {\n    if (!keys.includes(key)) {\n      filtered.delete(key)\n    }\n  }\n  return filtered\n}\n", "import { debug } from '../debug'\nimport { debounceController } from './debounce'\nimport { globalThrottleQueue } from './throttle'\n\nlet mutex = 0\n\nexport function setQueueResetMutex(value = 1): void {\n  mutex = value\n}\n\nexport function spinQueueResetMutex(): void {\n  // Don't let values become too negatively large and wrap around\n  mutex = Math.max(0, mutex - 1)\n  if (mutex > 0) {\n    return\n  }\n  resetQueues()\n}\n\nexport function resetQueues(): void {\n  debug('[nuqs] Aborting queues')\n  debounceController.abortAll()\n  const abortedKeys = globalThrottleQueue.abort()\n  abortedKeys.forEach(key => debounceController.queuedQuerySync.emit(key))\n}\n", "import { debug } from '../../lib/debug'\nimport type { Emitter } from '../../lib/emitter'\nimport { error } from '../../lib/errors'\nimport { resetQueues, spinQueueResetMutex } from '../../lib/queues/reset'\n\nexport type SearchParamsSyncEmitterEvents = { update: URLSearchParams }\n\nexport const historyUpdateMarker = '__nuqs__'\n\ndeclare global {\n  interface History {\n    nuqs?: {\n      version: string\n      adapters: string[]\n    }\n  }\n}\n\nexport function getSearchParams(url: string | URL): URLSearchParams {\n  if (url instanceof URL) {\n    return url.searchParams\n  }\n  if (url.startsWith('?')) {\n    return new URLSearchParams(url)\n  }\n  try {\n    return new URL(url, location.origin).searchParams\n  } catch {\n    return new URLSearchParams(url)\n  }\n}\n\nexport function shouldPatchHistory(adapter: string): boolean {\n  if (typeof history === 'undefined') {\n    return false\n  }\n  if (\n    history.nuqs?.version &&\n    history.nuqs.version !== '0.0.0-inject-version-here'\n  ) {\n    console.error(\n      error(409),\n      history.nuqs.version,\n      `0.0.0-inject-version-here`,\n      adapter\n    )\n    return false\n  }\n  if (history.nuqs?.adapters?.includes(adapter)) {\n    return false\n  }\n  return true\n}\n\nexport function markHistoryAsPatched(adapter: string): void {\n  history.nuqs = history.nuqs ?? {\n    // This will be replaced by the prepack script\n    version: '0.0.0-inject-version-here',\n    adapters: []\n  }\n  history.nuqs.adapters.push(adapter)\n}\n\nexport function patchHistory(\n  emitter: Emitter<SearchParamsSyncEmitterEvents>,\n  adapter: string\n): void {\n  if (!shouldPatchHistory(adapter)) {\n    return\n  }\n  let lastSearchSeen = typeof location === 'object' ? location.search : ''\n\n  emitter.on('update', search => {\n    const searchString = search.toString()\n    lastSearchSeen = searchString.length ? '?' + searchString : ''\n  })\n\n  window.addEventListener('popstate', () => {\n    lastSearchSeen = location.search\n    resetQueues()\n  })\n\n  debug(\n    '[nuqs %s] Patching history (%s adapter)',\n    '0.0.0-inject-version-here',\n    adapter\n  )\n  function sync(url: URL | string) {\n    spinQueueResetMutex()\n    try {\n      const newSearch = new URL(url, location.origin).search\n      if (newSearch === lastSearchSeen) {\n        return\n      }\n    } catch {}\n    try {\n      emitter.emit('update', getSearchParams(url))\n    } catch (e) {\n      console.error(e)\n    }\n  }\n  const originalPushState = history.pushState\n  const originalReplaceState = history.replaceState\n  history.pushState = function nuqs_pushState(state, marker, url) {\n    originalPushState.call(history, state, '', url)\n    if (url && marker !== historyUpdateMarker) {\n      sync(url)\n    }\n  }\n  history.replaceState = function nuqs_replaceState(state, marker, url) {\n    originalReplaceState.call(history, state, '', url)\n    if (url && marker !== historyUpdateMarker) {\n      sync(url)\n    }\n  }\n  markHistoryAsPatched(adapter)\n}\n", "import {\n  createContext,\n  createElement,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n  type ReactElement,\n  type ReactNode\n} from 'react'\nimport { debug } from '../lib/debug'\nimport { createEmitter } from '../lib/emitter'\nimport { renderQueryString } from '../lib/url-encoding'\nimport { createAdapterProvider, type AdapterProps } from './lib/context'\nimport type { AdapterInterface, AdapterOptions } from './lib/defs'\nimport { applyChange, filterSearchParams } from './lib/key-isolation'\nimport {\n  historyUpdateMarker,\n  patchHistory,\n  type SearchParamsSyncEmitterEvents\n} from './lib/patch-history'\n\nconst emitter = createEmitter<SearchParamsSyncEmitterEvents>()\n\nfunction generateUpdateUrlFn(fullPageNavigationOnShallowFalseUpdates: boolean) {\n  return function updateUrl(search: URLSearchParams, options: AdapterOptions) {\n    const url = new URL(location.href)\n    url.search = renderQueryString(search)\n    debug('[nuqs react] Updating url: %s', url)\n    if (fullPageNavigationOnShallowFalseUpdates && options.shallow === false) {\n      const method =\n        options.history === 'push' ? location.assign : location.replace\n      method.call(location, url)\n    } else {\n      const method =\n        options.history === 'push' ? history.pushState : history.replaceState\n      method.call(history, history.state, historyUpdateMarker, url)\n    }\n    emitter.emit('update', search)\n    if (options.scroll === true) {\n      window.scrollTo({ top: 0 })\n    }\n  }\n}\n\nconst NuqsReactAdapterContext = createContext({\n  fullPageNavigationOnShallowFalseUpdates: false\n})\n\nfunction useNuqsReactAdapter(watchKeys: string[]): AdapterInterface {\n  const { fullPageNavigationOnShallowFalseUpdates } = useContext(\n    NuqsReactAdapterContext\n  )\n  const [searchParams, setSearchParams] = useState(() => {\n    if (typeof location === 'undefined') {\n      return new URLSearchParams()\n    }\n    return filterSearchParams(\n      new URLSearchParams(location.search),\n      watchKeys,\n      false\n    )\n  })\n  useEffect(() => {\n    // Popstate event is only fired when the user navigates\n    // via the browser's back/forward buttons.\n    const onPopState = () => {\n      setSearchParams(\n        applyChange(new URLSearchParams(location.search), watchKeys, false)\n      )\n    }\n    const onEmitterUpdate = (search: URLSearchParams) => {\n      setSearchParams(applyChange(search, watchKeys, true))\n    }\n    emitter.on('update', onEmitterUpdate)\n    window.addEventListener('popstate', onPopState)\n    return () => {\n      emitter.off('update', onEmitterUpdate)\n      window.removeEventListener('popstate', onPopState)\n    }\n  }, [watchKeys.join('&')])\n  const updateUrl = useMemo(\n    () => generateUpdateUrlFn(fullPageNavigationOnShallowFalseUpdates),\n    [fullPageNavigationOnShallowFalseUpdates]\n  )\n  return {\n    searchParams,\n    updateUrl\n  }\n}\n\nconst NuqsReactAdapter = createAdapterProvider(useNuqsReactAdapter)\n\nexport function NuqsAdapter({\n  children,\n  fullPageNavigationOnShallowFalseUpdates = false,\n  ...adapterProps\n}: AdapterProps & {\n  children: ReactNode\n  fullPageNavigationOnShallowFalseUpdates?: boolean\n}): ReactElement {\n  return createElement(\n    NuqsReactAdapterContext.Provider,\n    { value: { fullPageNavigationOnShallowFalseUpdates } },\n    createElement(NuqsReactAdapter, { ...adapterProps, children })\n  )\n}\n\n/**\n * Opt-in to syncing shallow updates of the URL with the useOptimisticSearchParams hook.\n *\n * By default, the useOptimisticSearchParams hook will only react to internal nuqs updates.\n * If third party code updates the History API directly, use this function to\n * enable useOptimisticSearchParams to react to those changes.\n */\nexport function enableHistorySync(): void {\n  patchHistory(emitter, 'react')\n}\n"],
  "mappings": "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",
  "names": ["emitter"]
}
