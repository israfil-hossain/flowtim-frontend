{"version":3,"file":"key-isolation-CqapOYhu.js","names":[],"sources":["../src/adapters/lib/key-isolation.ts"],"sourcesContent":["import { debug } from '../../lib/debug'\n\nexport function applyChange(\n  newValue: URLSearchParams,\n  keys: string[],\n  copy: boolean\n): (oldValue: URLSearchParams) => URLSearchParams {\n  return (oldValue: URLSearchParams) => {\n    const hasChanged =\n      keys.length === 0\n        ? true\n        : keys.some(key => oldValue.get(key) !== newValue.get(key))\n    if (!hasChanged) {\n      debug(\n        '[nuqs `%s`] no change, returning previous',\n        keys.join(','),\n        oldValue\n      )\n      return oldValue\n    }\n    const filtered = filterSearchParams(newValue, keys, copy)\n    debug(\n      `[nuqs \\`%s\\`] subbed search params change\n  from %O\n  to   %O`,\n      keys.join(','),\n      oldValue,\n      filtered\n    )\n    return filtered\n  }\n}\n\nexport function filterSearchParams(\n  search: URLSearchParams,\n  keys: string[],\n  copy: boolean\n): URLSearchParams {\n  if (keys.length === 0) {\n    return search\n  }\n  const filtered = copy ? new URLSearchParams(search) : search\n  for (const key of search.keys()) {\n    if (!keys.includes(key)) {\n      filtered.delete(key)\n    }\n  }\n  return filtered\n}\n"],"mappings":";;;AAEA,SAAgB,YACd,UACA,MACA,MACgD;AAChD,SAAQ,aAA8B;EACpC,MAAM,aACJ,KAAK,WAAW,IACZ,OACA,KAAK,MAAK,QAAO,SAAS,IAAI,SAAS,SAAS,IAAI;AAC1D,MAAI,CAAC,YAAY;AACf,SACE,6CACA,KAAK,KAAK,MACV;AAEF,UAAO;;EAET,MAAM,WAAW,mBAAmB,UAAU,MAAM;AACpD,QACE;;YAGA,KAAK,KAAK,MACV,UACA;AAEF,SAAO;;;AAIX,SAAgB,mBACd,QACA,MACA,MACiB;AACjB,KAAI,KAAK,WAAW,EAClB,QAAO;CAET,MAAM,WAAW,OAAO,IAAI,gBAAgB,UAAU;AACtD,MAAK,MAAM,OAAO,OAAO,OACvB,KAAI,CAAC,KAAK,SAAS,KACjB,UAAS,OAAO;AAGpB,QAAO"}